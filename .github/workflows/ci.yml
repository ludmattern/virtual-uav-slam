name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1) Log in to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 2) Prepare QEMU & buildx
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container

      # 3) Pull previous cache image (if any)
      - name: Pull cache image
        run: docker pull ghcr.io/ludmattern/virtual-uav-slam:dev-cache || true

      # 4) Build & push the dev image
      - name: Build & push dev image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          load: true
          tags: ghcr.io/ludmattern/virtual-uav-slam:dev
          cache-from: type=registry,ref=ghcr.io/ludmattern/virtual-uav-slam:dev-cache
          cache-to: type=registry,ref=ghcr.io/ludmattern/virtual-uav-slam:dev-cache,mode=max

      # 5) Tag for local ./dev script
      - name: Tag image for dev script
        run: docker tag ghcr.io/ludmattern/virtual-uav-slam:dev virtual-uav-slam:dev

      # 6) Smoke test: ROS 2 help
      - name: Test ROS 2 installation
        run: |
          docker run --rm ghcr.io/ludmattern/virtual-uav-slam:dev \
            bash -c "source /opt/ros/humble/setup.bash && ros2 --help"

      # 7) Demo test: talker & listener
      - name: Test talker/listener demo
        run: |
          docker run --rm ghcr.io/ludmattern/virtual-uav-slam:dev bash -c '
            set -eo pipefail
            source /opt/ros/humble/setup.bash
            # start talker
            ros2 run demo_nodes_cpp talker >/dev/null 2>&1 &
            TALKER_PID=$!
            sleep 2
            # run listener with timeout, but capture its exit code
            if timeout 5 bash -c "ros2 run demo_nodes_cpp listener | grep -m1 \"I heard:\""; then
              kill $TALKER_PID
              exit 0
            else
              kill $TALKER_PID
              exit 1
            fi
          '

      # 8) Validate the ./dev helper
      - name: Test dev helper script
        run: |
          chmod +x ./dev
          docker tag ghcr.io/ludmattern/virtual-uav-slam:dev virtual-uav-slam:dev
          ./dev up -c "ros2 --help"
