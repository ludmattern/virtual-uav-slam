# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout
      - uses: actions/checkout@v4

      # 2. Build Docker image
      - name: Build Docker image
        run: |
          docker build -t virtual-uav-slam:dev .

      # 3. Smoke-test ROS 2 installation
      - name: Test ROS 2 installation
        run: |
          docker run --rm virtual-uav-slam:dev bash -c \
            "source /opt/ros/humble/setup.bash && ros2 --help"

      # 4. Test talker/listener demo
      - name: Test talker/listener demo
        run: |
          docker run --rm virtual-uav-slam:dev bash -c '
            set -euo pipefail
            source /opt/ros/humble/setup.bash

            # lancer le talker en arrière-plan
            ros2 run demo_nodes_cpp talker >/dev/null 2>&1 &
            TALKER_PID=$!

            # laisser le temps à ROS 2 de créer les topics
            sleep 2

            # écouter pendant max 5 s (timeout 124 si expiration)
            timeout 5 bash -c "ros2 run demo_nodes_cpp listener | grep -m1 \"I heard:\""

            # arrêter proprement le talker
            kill $TALKER_PID
          '
